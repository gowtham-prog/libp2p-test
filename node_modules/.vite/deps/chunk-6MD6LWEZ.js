import {
  create
} from "./chunk-PJW3RYJ3.js";
import {
  __export
} from "./chunk-CWJX2WJ3.js";

// ../../node_modules/multiformats/src/hashes/hasher.js
var hasher_exports = {};
__export(hasher_exports, {
  Hasher: () => Hasher,
  from: () => from
});
var from = ({ name, code, encode }) => new Hasher(name, code, encode);
var Hasher = class {
  constructor(name, code, encode) {
    this.name = name;
    this.code = code;
    this.encode = encode;
  }
  digest(input) {
    if (input instanceof Uint8Array) {
      const result = this.encode(input);
      return result instanceof Uint8Array ? create(this.code, result) : result.then((digest) => create(this.code, digest));
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};

// ../../node_modules/multiformats/src/hashes/sha2-browser.js
var sha2_browser_exports = {};
__export(sha2_browser_exports, {
  sha256: () => sha256,
  sha512: () => sha512
});
var sha = (name) => async (data) => new Uint8Array(await crypto.subtle.digest(name, data));
var sha256 = from({
  name: "sha2-256",
  code: 18,
  encode: sha("SHA-256")
});
var sha512 = from({
  name: "sha2-512",
  code: 19,
  encode: sha("SHA-512")
});

export {
  hasher_exports,
  sha256,
  sha512,
  sha2_browser_exports
};
//# sourceMappingURL=chunk-6MD6LWEZ.js.map
