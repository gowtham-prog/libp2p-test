import {
  base64
} from "./chunk-BOUIN2HE.js";
import {
  base32
} from "./chunk-M46RNIVP.js";
import {
  base58btc
} from "./chunk-DEKXFOR2.js";
import {
  require_browser
} from "./chunk-7CPFPK54.js";
import {
  __toESM
} from "./chunk-CWJX2WJ3.js";

// ../../packages/logger/dist/src/index.js
var import_debug = __toESM(require_browser());
import_debug.default.formatters.b = (v) => {
  return v == null ? "undefined" : base58btc.baseEncode(v);
};
import_debug.default.formatters.t = (v) => {
  return v == null ? "undefined" : base32.baseEncode(v);
};
import_debug.default.formatters.m = (v) => {
  return v == null ? "undefined" : base64.baseEncode(v);
};
import_debug.default.formatters.p = (v) => {
  return v == null ? "undefined" : v.toString();
};
import_debug.default.formatters.c = (v) => {
  return v == null ? "undefined" : v.toString();
};
import_debug.default.formatters.k = (v) => {
  return v == null ? "undefined" : v.toString();
};
import_debug.default.formatters.a = (v) => {
  return v == null ? "undefined" : v.toString();
};
function createDisabledLogger(namespace) {
  const logger2 = () => {
  };
  logger2.enabled = false;
  logger2.color = "";
  logger2.diff = 0;
  logger2.log = () => {
  };
  logger2.namespace = namespace;
  logger2.destroy = () => true;
  logger2.extend = () => logger2;
  return logger2;
}
function logger(name) {
  let trace = createDisabledLogger(`${name}:trace`);
  if (import_debug.default.enabled(`${name}:trace`) && import_debug.default.names.map((r) => r.toString()).find((n) => n.includes(":trace")) != null) {
    trace = (0, import_debug.default)(`${name}:trace`);
  }
  return Object.assign((0, import_debug.default)(name), {
    error: (0, import_debug.default)(`${name}:error`),
    trace
  });
}

export {
  logger
};
//# sourceMappingURL=chunk-WDWZMECJ.js.map
