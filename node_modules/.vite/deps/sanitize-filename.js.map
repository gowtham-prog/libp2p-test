{
  "version": 3,
  "sources": ["../../../../../node_modules/truncate-utf8-bytes/lib/truncate.js", "../../../../../node_modules/utf8-byte-length/browser.js", "../../../../../node_modules/truncate-utf8-bytes/browser.js", "../../../../../node_modules/sanitize-filename/index.js", "dep:sanitize-filename"],
  "sourcesContent": ["'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function truncate(getLength, string, byteLength) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n\n  var charLength = string.length;\n  var curByteLength = 0;\n  var codePoint;\n  var segment;\n\n  for (var i = 0; i < charLength; i += 1) {\n    codePoint = string.charCodeAt(i);\n    segment = string[i];\n\n    if (isHighSurrogate(codePoint) && isLowSurrogate(string.charCodeAt(i + 1))) {\n      i += 1;\n      segment += string[i];\n    }\n\n    curByteLength += getLength(segment);\n\n    if (curByteLength === byteLength) {\n      return string.slice(0, i + 1);\n    }\n    else if (curByteLength > byteLength) {\n      return string.slice(0, i - segment.length + 1);\n    }\n  }\n\n  return string;\n};\n\n", "'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function getByteLength(string) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n\n  var charLength = string.length;\n  var byteLength = 0;\n  var codePoint = null;\n  var prevCodePoint = null;\n  for (var i = 0; i < charLength; i++) {\n    codePoint = string.charCodeAt(i);\n    // handle 4-byte non-BMP chars\n    // low surrogate\n    if (isLowSurrogate(codePoint)) {\n      // when parsing previous hi-surrogate, 3 is added to byteLength\n      if (prevCodePoint != null && isHighSurrogate(prevCodePoint)) {\n        byteLength += 1;\n      }\n      else {\n        byteLength += 3;\n      }\n    }\n    else if (codePoint <= 0x7f ) {\n      byteLength += 1;\n    }\n    else if (codePoint >= 0x80 && codePoint <= 0x7ff) {\n      byteLength += 2;\n    }\n    else if (codePoint >= 0x800 && codePoint <= 0xffff) {\n      byteLength += 3;\n    }\n    prevCodePoint = codePoint;\n  }\n\n  return byteLength;\n};\n", "'use strict';\n\nvar truncate = require(\"./lib/truncate\");\nvar getLength = require(\"utf8-byte-length/browser\");\nmodule.exports = truncate.bind(null, getLength);\n", "/*jshint node:true*/\n'use strict';\n\n/**\n * Replaces characters in strings that are illegal/unsafe for filenames.\n * Unsafe characters are either removed or replaced by a substitute set\n * in the optional `options` object.\n *\n * Illegal Characters on Various Operating Systems\n * / ? < > \\ : * | \"\n * https://kb.acronis.com/content/39790\n *\n * Unicode Control codes\n * C0 0x00-0x1f & C1 (0x80-0x9f)\n * http://en.wikipedia.org/wiki/C0_and_C1_control_codes\n *\n * Reserved filenames on Unix-based systems (\".\", \"..\")\n * Reserved filenames in Windows (\"CON\", \"PRN\", \"AUX\", \"NUL\", \"COM1\",\n * \"COM2\", \"COM3\", \"COM4\", \"COM5\", \"COM6\", \"COM7\", \"COM8\", \"COM9\",\n * \"LPT1\", \"LPT2\", \"LPT3\", \"LPT4\", \"LPT5\", \"LPT6\", \"LPT7\", \"LPT8\", and\n * \"LPT9\") case-insesitively and with or without filename extensions.\n *\n * Capped at 255 characters in length.\n * http://unix.stackexchange.com/questions/32795/what-is-the-maximum-allowed-filename-and-folder-size-with-ecryptfs\n *\n * @param  {String} input   Original filename\n * @param  {Object} options {replacement: String | Function }\n * @return {String}         Sanitized filename\n */\n\nvar truncate = require(\"truncate-utf8-bytes\");\n\nvar illegalRe = /[\\/\\?<>\\\\:\\*\\|\"]/g;\nvar controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\nvar reservedRe = /^\\.+$/;\nvar windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\nvar windowsTrailingRe = /[\\. ]+$/;\n\nfunction sanitize(input, replacement) {\n  if (typeof input !== 'string') {\n    throw new Error('Input must be string');\n  }\n  var sanitized = input\n    .replace(illegalRe, replacement)\n    .replace(controlRe, replacement)\n    .replace(reservedRe, replacement)\n    .replace(windowsReservedRe, replacement)\n    .replace(windowsTrailingRe, replacement);\n  return truncate(sanitized, 255);\n}\n\nmodule.exports = function (input, options) {\n  var replacement = (options && options.replacement) || '';\n  var output = sanitize(input, replacement);\n  if (replacement === '') {\n    return output;\n  }\n  return sanitize(output, '');\n};\n", "export default require(\"../../node_modules/sanitize-filename/index.js\");"],
  "mappings": "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",
  "names": ["require_browser"]
}
